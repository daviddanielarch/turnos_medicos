permissions:
  contents: read
name: Django CI

on:
  push:
    branches: [ "main" ]
    paths:
      - '**/*.py'
      - 'requirements*.txt'
      - 'pyproject.toml'
      - '.github/workflows/django.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - '**/*.py'
      - 'requirements*.txt'
      - 'pyproject.toml'
      - '.github/workflows/django.yml'
  workflow_dispatch:
    inputs:
      run_tests:
        description: 'Run tests'
        required: true
        default: true
        type: boolean
      run_deploy_backend:
        description: 'Deploy backend'
        required: true
        default: false
        type: boolean
      run_deploy_appointment_finder:
        description: 'Deploy appointment finder'
        required: true
        default: false
        type: boolean

jobs:
  tests:
    if: ${{ github.event_name != 'workflow_dispatch' || inputs.run_tests }}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.10.12]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    - name: Run Black
      run: |
        black --check --diff .
    - name: Run MyPy
      run: |
        mypy --ignore-missing-imports .
    - name: Run Tests with Coverage
      env:
        PGDATABASE: test_db
        PGUSER: postgres
        PGPASSWORD: postgres
        PGHOST: localhost
        PGPORT: 5432
      run: |
        python manage.py migrate
        pytest
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false

  deploy-backend:
    needs: tests
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && inputs.run_deploy_backend) }}
    container: ghcr.io/railwayapp/cli:latest
    env:
      SVC_ID: 7e97f93e-eb52-46f6-932d-18efc47da0cc
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - run: railway up --service=${{ env.SVC_ID }}

  deploy-appointment-finder:
    needs: tests
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && inputs.run_deploy_appointment_finder) }}
    container: ghcr.io/railwayapp/cli:latest
    env:
      SVC_ID: a5278526-db38-4528-a829-f00d35372a4d
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - run: railway up --service=${{ env.SVC_ID }}